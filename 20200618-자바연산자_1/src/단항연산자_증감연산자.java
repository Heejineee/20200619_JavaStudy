/*
 * 		1. 연산자
 * 			1) 연산자의 종류
 * 				- 단항연산자
 * 					- 증감연산자 (++, --)
 * 					- 부정연산자 (!)
 * 					- 부호연산자 (+, -)
 * 					- 형변환연산자 : 데이터형을 변경해서 연산처리가 가능하게 만든다. (연산은 데이터형이 동일해야 하기 때문에)
 * 										  ((type)) : type ==> int, byte, char, double, long...
 * 				- 이항연산자
 * 					- 산술연산자 (+, -, *, /, %) => 형변환 과정 잘 봐야함.
 * 							※ 나누기 할 때 0으로 나눌 수 없다.
 * 							※ 정수/정수=정수 ==> 5/2=2
 * 							※ % 나머지 : 배수 구할 때 많이 씀! ex) 5%2 => 1
 * 																			  5%-2 => 1
 * 																			 -5%2 => -1
 * 																			 -5%-2 => -1 
 * 																			 ==> 왼쪽 편의 부호에 따라 나머지 값의 부호 결정됨
 * 					- 비트연산자 (&, |, ^)
 * 					- 쉬프트연산자 (<<, >>)
 * 					- 비교연산자 (==, !=, <, >, <=, >=)
 * 					- 논리연산자 (&&, ||)
 * 					- 대입연산자 (=, +=, -=, ...)
 * 				- 삼항연산자 : 조건 ? 값1:값2
 * 								  조건 : true ==> 값1
 * 								  조건 : false ==> 값2
 * 			2) 연산 방법
 * 				- 단항연산자
 * 					- 증감연산자 : 반복문을 사용, 게임 로직 에 주로 사용
 * 						- ++ : 무조건 한개를 증가한다
 * 						- -- : 무조건 한개를 감소한다
 * 						- 사용법 : a++(a--) : 전치연산자 (증가한 다음에 대입) ex) int a=10; int b=++a; ==> a=11, b=11 ==> 증가 먼저 되고서 대입/메모리에 따로 저장 안해도 저장됨
 * 									 ++a(--a) : 후치연산자 (대입한 다음에 증가) ex) int a=10; int b=a++; ==> a=12, b=10 ==> 대입 먼저 하고서 증가/메모리에 따로 저장 안해도 저장됨
 * 				- 부정연산자 : true->false, false->true 반드시 boolean에 사용. ! 붙이면 됨 ex) boolean bCheck=false;
 * 																												   !bCheck
 * 																												   System.out.println(bCheck) ==> false 출력. 부정만 하고 메모리에 저장은 안시켜서!
 * 																																							 적용 시키려면 bCheck=!bCheck
 * 			3) 연산자 우선순위
 */
public class 단항연산자_증감연산자 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 전치연산
		int a=10;
		int b=++a;
		System.out.println("a="+a+", b="+b);
		
		// 후치연산
		a=10;
		b=a++;
		System.out.println("a="+a+", b="+b);
		
		a=10;
		b=++a + ++a + ++a + ++a;
		//  11		  12		13		  14
		//a=14, b=50
		//b=a++ + a++ + a++ + a++;
		//    10		11		  12		13
		//a=14, b=46
		System.out.println("a="+a+", b="+b);
	}

}
